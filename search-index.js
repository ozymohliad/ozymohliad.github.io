var searchIndex = JSON.parse('{\
"gaimin_staking":{"doc":"","t":"RFAAFAAAAFNNENNNNNNNNNLLLLLLLLLLLLNNDNDNENNDAMLLLLLLLLMMLLLLLLLLMLLLLLLLMLMMMMMLLLLLLLLLLLLLLLLLDDDDDDDMMMMLLLLLLLLLLLLLLMMMMMMLLLLLLMLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMRRRRDRRLLLLLLLLLRDDDDMMMLLLLLLLLMMMLLLLLMLLLLLLLLMMMMMLLLLLLLLLLLLLLLLFFFFFFFFFF","n":["ID","check_id","entrypoint","error","id","instruction","processor","state","utils","entrypoint","AmountExhausted","ClaimingNotAvailable","GaiminError","InvalidConfig","InvalidInstruction","InvalidNft","InvalidString","InvalidTokenAccount","InvalidTokenStandard","PermissionDenied","TokenAccountUnlocked","ZeroNftBalance","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","BumpNonce","Claim","ClaimArgs","Config","ConfigArgs","Delete","GaiminInstruction","Nft","Receiver","ReceiverArgs","accounts","bnb_chain_wallet_address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_record_bump","claimable_from","fmt","fmt","fmt","fmt","from","from","from","from","initial_reward_frac","into","into","into","into","is_initialized","is_initialized","is_initialized","nft_record_bump","pack","receiver_bump","reward_period_sec","token_acc_bump","token_record_bump","total_reward","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unpack","vzip","vzip","vzip","vzip","BumpNonceAccounts","ClaimAccounts","ConfigAccounts","Context","DeleteAccounts","NftAccounts","ReceiverAccounts","accounts","authority","authority","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim","claim","config","config","config","config","context","context","context","context","context","context","edition","from","from","from","from","from","from","from","into","into","into","into","into","into","into","metadata","mint","nft_record","nft_record","receiver","receiver","receiver","remaining_accounts","system_program","system_program","system_program","system_program","target","token","token_record","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet","CLAIM_PDA_SEED","CONFIG_PDA_SEED","MPL_TOKEN_METADATA_PROGRAM_ID","NFT_PDA_SEED","Processor","RECEIVER_PDA_SEED","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","borrow","borrow_mut","from","into","process","try_from","try_into","type_id","vzip","BNB_CHAIN_WALLET_ADDRESS_LENGTH","ClaimRecord","Config","NftRecord","ReceiverRecord","authority","bnb_chain_wallet_address","bnb_chain_wallet_address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claimable_from","claimed_amount","claimed_amount","fmt","from","from","from","from","initial_reward_frac","into","into","into","into","is_initialized","is_initialized","is_initialized","is_initialized","last_claim_at","nonce","reward_period_sec","total_amount","total_reward","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","assert_derived_from","assert_derived_from_with_bump","assert_initialized","assert_ix_data_length","assert_signer","assert_uninitialized","create_account_ix","delete_account","is_initialized","parse_string"],"q":[[0,"gaimin_staking"],[9,"gaimin_staking::entrypoint"],[10,"gaimin_staking::error"],[34,"gaimin_staking::instruction"],[96,"gaimin_staking::instruction::accounts"],[194,"gaimin_staking::processor"],[210,"gaimin_staking::state"],[264,"gaimin_staking::utils"],[274,"solana_program::pubkey"],[275,"core::fmt"],[276,"core::fmt"],[277,"core::any"],[278,"alloc::vec"],[279,"solana_program::program_error"],[280,"solana_program::account_info"],[281,"solana_program::entrypoint"],[282,"solana_program::instruction"],[283,"alloc::string"]],"d":["The const program ID.","Returns <code>true</code> if given pubkey is the program ID.","","","Returns the program ID.","","","","","Safety","Error code <code>0xA</code>","Error code: <code>0x9</code>","Custom errors of the GMRX Claim Program","Error code: <code>0x1</code>","Error code: <code>0x0</code>","Error code: <code>0x3</code>","Error code: <code>0x8</code>","Error code: <code>0x5</code>","Error code: <code>0x4</code>","Error code: <code>0x2</code>","Error code: <code>0x7</code>","Error code: <code>0x6</code>","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Instruction code: <code>0x5</code>","Instruction code: <code>0x4</code>","","Instruction code: <code>0x0</code>","","Instruction code: <code>0x1</code>","Instructions supported by the GMRX Claim Program","Instruction code: <code>0x2</code>","Instruction code: <code>0x3</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Stores information about a claim. Created for each claim …","Stores global configuration options. Created once for the …","Stores staking information about an NFT. Created for each …","Stores information about the claims of each user. Created …","Account who has the right to issue system instructions","BNB Chain wallet address where the reward should be sent. …","BNB Chain wallet address where the rewards for the future …","","","","","","","","","Starting date when claiming becomes available","The amount that has been claimed","The reward amount claimed","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Fraction of the <code>Config::total_reward</code> that is given for the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Timestamp of the last claim. Zero if no claims have been …","The number of claims made by this user, used to derive …","Duration in seconds after which the full reward amount may …","Total amount that can be claimed (gets copied from …","Total reward amount that may be claimed for each NFT","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,0,11,0,11,0,11,11,0,0,13,11,12,13,14,11,12,13,14,14,12,11,12,13,14,11,12,13,14,12,11,12,13,14,12,13,14,14,11,14,12,14,14,12,11,12,13,14,11,12,13,14,11,12,13,14,11,11,12,13,14,0,0,0,0,0,0,0,20,19,21,22,20,19,21,22,23,24,25,20,19,21,22,23,24,25,24,25,19,21,22,24,19,21,22,23,24,25,22,20,19,21,22,23,24,25,20,19,21,22,23,24,25,22,22,22,24,23,24,25,20,19,22,23,24,21,24,24,20,19,21,22,23,24,25,20,19,21,22,23,24,25,20,19,21,22,23,24,25,23,20,19,21,22,23,24,25,24,25,0,0,0,0,0,0,0,34,34,34,34,34,34,34,34,34,0,0,0,0,0,28,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,28,29,30,27,28,29,30,27,29,27,28,29,28,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,0,0,0,0,0,0,0,0,0,0],"f":[0,[1,2],0,0,[[],1],0,0,0,0,[3,4],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],6,[],[]],[[5,7],8],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[11,7],8],[[12,7],8],[[13,7],8],[[14,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,2],[13,2],[14,2],0,[11,[[15,[3]]]],0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[[16,[3]]],[[9,[11,17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[[16,[18]]],[[9,[[20,[19]],17]]]],[[[16,[18]]],[[9,[[20,[21]],17]]]],[[[16,[18]]],[[9,[[20,[22]],17]]]],[[[16,[18]]],[[9,[[20,[23]],17]]]],[[[16,[18]]],[[9,[[20,[24]],17]]]],[[[16,[18]]],[[9,[[20,[25]],17]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[1,[16,[18]],[16,[3]]],26],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[27,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,2],[29,2],[30,2],[27,2],0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,1,[16,[[16,[3]]]]],[[9,[3,17]]]],[[18,1,[16,[[16,[3]]]]],26],[18,26],[[[16,[3]],31],26],[18,26],[18,26],[[1,1,1],32],[[18,18],26],[18,[[9,[2,17]]]],[[[16,[3]]],[[9,[33,17]]]]],"c":[],"p":[[3,"Pubkey",274],[15,"bool"],[15,"u8"],[15,"u64"],[4,"GaiminError",10],[15,"tuple"],[3,"Formatter",275],[6,"Result",275],[4,"Result",276],[3,"TypeId",277],[4,"GaiminInstruction",34],[3,"ConfigArgs",34],[3,"ReceiverArgs",34],[3,"ClaimArgs",34],[3,"Vec",278],[15,"slice"],[4,"ProgramError",279],[3,"AccountInfo",280],[3,"ConfigAccounts",96],[3,"Context",96],[3,"DeleteAccounts",96],[3,"NftAccounts",96],[3,"ReceiverAccounts",96],[3,"ClaimAccounts",96],[3,"BumpNonceAccounts",96],[6,"ProgramResult",281],[3,"ReceiverRecord",210],[3,"Config",210],[3,"NftRecord",210],[3,"ClaimRecord",210],[15,"usize"],[3,"Instruction",282],[3,"String",283],[3,"Processor",194]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
