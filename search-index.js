var searchIndex = JSON.parse('{\
"gaimin_staking":{"doc":"","t":"RFAAFAAAAFNNENNNNNNNNNNLLLLLLLLLLLLNDNDNDNENAMMLLLLLLLLMMLLLLLLLLMMLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLDDDDDDMMMLLLLLLLLLLLLMMMMMMMLLLLLMMLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMRRRRDRLLLLLLLLLRDDDMMMMMLLLLLLMMMLLLMMMLLLLLLMMMLLLLLLLLLLLLFFFFFFFFFF","n":["ID","check_id","entrypoint","error","id","instruction","processor","state","utils","entrypoint","AmountExhausted","ClaimingNotAvailable","GaiminError","InvalidConfig","InvalidCreator","InvalidInstruction","InvalidNft","InvalidString","InvalidTokenAccount","InvalidTokenStandard","PermissionDenied","TokenAccountUnlocked","ZeroNftBalance","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","Claim","ClaimArgs","Config","ConfigArgs","CreateClaim","CreateClaimArgs","Delete","GaiminInstruction","Nft","accounts","accumulated_reward","bnb_chain_wallet_address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","claimable_from","fmt","fmt","fmt","fmt","from","from","from","from","generation_duration","initial_reward","into","into","into","into","is_initialized","is_initialized","is_initialized","nft_record_bump","pack","seed","token_acc_bump","token_record_bump","total_accumulation_period","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unpack","vzip","vzip","vzip","vzip","ClaimAccounts","ConfigAccounts","Context","CreateClaimAccounts","DeleteAccounts","NftAccounts","accounts","authority","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim","claim","config","config","config","config","config","context","context","context","context","context","creator","edition","from","from","from","from","from","from","into","into","into","into","into","into","metadata","mint","nft_record","nft_record","payer","remaining_accounts","system_program","system_program","system_program","target","token","token_record","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet","CLAIM_PDA_SEED","CONFIG_PDA_SEED","MPL_TOKEN_METADATA_PROGRAM_ID","NFT_PDA_SEED","Processor","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","borrow","borrow_mut","from","into","process","try_from","try_into","type_id","vzip","BNB_CHAIN_WALLET_ADDRESS_LENGTH","ClaimRecord","Config","NftRecord","accumulated_reward","accumulation_duration","amount","authority","bnb_chain_wallet_address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","claimable_from","claimed_amount","creator","from","from","from","generation","generation_duration","initial_reward","into","into","into","is_initialized","is_initialized","is_initialized","last_claim_at","owner","total_amount","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","assert_derived_from","assert_derived_from_with_bump","assert_initialized","assert_ix_data_length","assert_signer","assert_uninitialized","create_account_ix","delete_account","is_initialized","parse_string"],"q":[[0,"gaimin_staking"],[9,"gaimin_staking::entrypoint"],[10,"gaimin_staking::error"],[35,"gaimin_staking::instruction"],[97,"gaimin_staking::instruction::accounts"],[182,"gaimin_staking::processor"],[197,"gaimin_staking::state"],[242,"gaimin_staking::utils"],[252,"solana_program::pubkey"],[253,"core::fmt"],[254,"core::fmt"],[255,"core::any"],[256,"alloc::vec"],[257,"solana_program::program_error"],[258,"solana_program::account_info"],[259,"solana_program::entrypoint"],[260,"solana_program::instruction"],[261,"alloc::string"]],"d":["The const program ID.","Returns <code>true</code> if given pubkey is the program ID.","","","Returns the program ID.","","","","","Safety","Error code <code>0xA</code>","Error code: <code>0x9</code>","Custom errors of the GMRX Claim Program","Error code: <code>0x1</code>","Error code <code>0xB</code>","Error code: <code>0x0</code>","Error code: <code>0x3</code>","Error code: <code>0x8</code>","Error code: <code>0x5</code>","Error code: <code>0x4</code>","Error code: <code>0x2</code>","Error code: <code>0x7</code>","Error code: <code>0x6</code>","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Instruction code: <code>0x4</code>","","Instruction code: <code>0x0</code>","","Instruction code: <code>0x3</code>","","Instruction code: <code>0x1</code>","Instructions supported by the GMRX Claim Program","Instruction code: <code>0x2</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Stores information about a claim. Created for each claim …","Stores global configuration options. Created once for the …","Stores staking information about an NFT. Created for each …","Reward amount that can be given over time","Duration in seconds after which the reward amount of 1 may …","The reward amount claimed","Account who has the right to issue system instructions","BNB Chain wallet address where the reward should be sent","","","","","","","Starting date when claiming becomes available","The amount that has been claimed","Creator of the claimable NFTs","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Specifies the time bucket when the record was created","Duration of a claim record generation in seconds","Reward amount given for the first claim","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Timestamp of the last claim. Zero if no claims have been …","Wallet address of the user who created the record","Total amount that can be claimed. Equals the sum of …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,0,11,0,11,0,11,0,11,0,12,13,11,12,13,14,11,12,13,14,13,12,11,12,13,14,11,12,13,14,12,12,11,12,13,14,12,13,14,14,11,13,14,14,12,11,12,13,14,11,12,13,14,11,12,13,14,11,11,12,13,14,0,0,0,0,0,0,20,19,21,20,19,21,22,23,24,20,19,21,22,23,24,23,24,19,21,22,23,24,19,21,22,23,24,19,22,20,19,21,22,23,24,20,19,21,22,23,24,22,22,22,24,22,20,19,22,23,21,24,24,20,19,21,22,23,24,20,19,21,22,23,24,20,19,21,22,23,24,20,19,21,22,23,24,23,24,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,0,0,0,0,26,26,28,26,28,26,27,28,26,27,28,26,27,26,26,27,28,28,26,26,26,27,28,26,27,28,27,28,27,26,27,28,26,27,28,26,27,28,26,27,28,0,0,0,0,0,0,0,0,0,0],"f":[0,[1,2],0,0,[[],1],0,0,0,0,[3,4],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],6,[],[]],[[5,7],8],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[11,7],8],[[12,7],8],[[13,7],8],[[14,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,2],[13,2],[14,2],0,[11,[[15,[3]]]],0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[[16,[3]]],[[9,[11,17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[[16,[18]]],[[9,[[20,[19]],17]]]],[[[16,[18]]],[[9,[[20,[21]],17]]]],[[[16,[18]]],[[9,[[20,[22]],17]]]],[[[16,[18]]],[[9,[[20,[23]],17]]]],[[[16,[18]]],[[9,[[20,[24]],17]]]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[1,[16,[18]],[16,[3]]],25],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,2],[27,2],[28,2],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,1,[16,[[16,[3]]]]],[[9,[3,17]]]],[[18,1,[16,[[16,[3]]]]],25],[18,25],[[[16,[3]],29],25],[18,25],[18,25],[[1,1,1],30],[[18,18],25],[18,[[9,[2,17]]]],[[[16,[3]]],[[9,[31,17]]]]],"c":[],"p":[[3,"Pubkey",252],[15,"bool"],[15,"u8"],[15,"u64"],[4,"GaiminError",10],[15,"tuple"],[3,"Formatter",253],[6,"Result",253],[4,"Result",254],[3,"TypeId",255],[4,"GaiminInstruction",35],[3,"ConfigArgs",35],[3,"CreateClaimArgs",35],[3,"ClaimArgs",35],[3,"Vec",256],[15,"slice"],[4,"ProgramError",257],[3,"AccountInfo",258],[3,"ConfigAccounts",97],[3,"Context",97],[3,"DeleteAccounts",97],[3,"NftAccounts",97],[3,"CreateClaimAccounts",97],[3,"ClaimAccounts",97],[6,"ProgramResult",259],[3,"Config",197],[3,"NftRecord",197],[3,"ClaimRecord",197],[15,"usize"],[3,"Instruction",260],[3,"String",261],[3,"Processor",182]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
